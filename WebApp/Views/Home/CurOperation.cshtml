@model Invest.WebApp.Models.CacheViewModel
@using Invest.Core.Enums
@using Invest.WebApp.Models
@{
	var a = Model.Account;
	var cur = Model.Cur;    
}
<tr>
    <th colspan="3" style="padding:6px; vertical-align:middle; text-align:left; background-color: azure;"><b>@a.Name (@a.BrokerName)</b></th>
    <th>comm</th>
</tr>
<tr>
    @{
        var commB = Model.CurBuyOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Commission);
        var commS = Model.CurSellOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Commission);
    }
    <td>Buys:</td>
    <td>@($"{Model.CurBuyOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Qty):N2}")</td>
    <td>@($"{Model.CurBuyOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Summa):N2}")</td>
    <td class="td-comm">@($"{commB:N2}")</td>
</tr>
<tr>
    <td>Sells:</td>
    <td>@($"{Model.CurSellOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Qty):N2}")</td>
    <td>@($"{Model.CurSellOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Summa):N2}")</td>
    <td class="td-comm">@($"{commS:N2}")</td>
</tr>
<tr>
    <td>Buy Curs:</td>
    <td>@($"{Model.CurBuyOps[new CacheViewModel.Item(cur, a.BitCode)].Min(x => x.Price):N4}")</td>
    <td>
        @if (Model.CurBuyOps[new CacheViewModel.Item(cur, a.BitCode)].Any()) {
            <span>@($"{Model.CurBuyOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Price * x.Qty) / Model.CurBuyOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Qty):N4}")</span>
        }
    </td>
    <td>@($"{Model.CurBuyOps[new CacheViewModel.Item(cur, a.BitCode)].Max(x => x.Price):N4}")</td>
</tr>
<tr>
    <td>Sell Curs:</td>
    <td>@($"{Model.CurSellOps[new CacheViewModel.Item(cur, a.BitCode)].Min(x => x.Price):N4}")</td>
    <td>
        @if (Model.CurSellOps[new CacheViewModel.Item(cur, a.BitCode)].Any())
        {
            <span>@($"{Model.CurSellOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Price * x.Qty) / Model.CurSellOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Qty):N4}")</span>
        }
    </td>
    <td>@($"{Model.CurSellOps[new CacheViewModel.Item(cur, a.BitCode)].Max(x => x.Price):N4}")</td>
</tr>

<tr>
    <td>buys $:</td>
    <td>@($"{Model.BuysOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Qty * x.Price):N2}")</td>
    <td>sells $:</td>
    <td>@($"{Model.SellOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Qty * x.Price):N2}")</td>
    <td>saldo $:</td>
    <td>@($"{Model.BuysOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Qty * x.Price) - Model.SellOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Qty * x.Price):N2}")</td>
</tr>

<tr class="tr-comm">
    <td>b.comm:</td>
    <td>@($"{Model.BuysOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Commission ?? 0m):N2}")</td>
    <td>s.comm:</td>
    <td>@($"{Model.SellOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Commission ?? 0m):N2}")</td>
    <td>sum:</td>
    <td>@($"{Model.BuysOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Commission ?? 0m) + Model.SellOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Commission ?? 0m):N4}")</td>
</tr>

<tr>
    <td>divs:</td>
    <td>@($"{Model.Divs[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Summa):N2}")</td>
</tr>

<tr>
    <td>total:</td>
    <td class="td-usd-total">
        @{
			var total =
				Model.CurBuyOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Qty)
				- Model.CurSellOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Qty)
				- Model.BuysOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Qty * x.Price)
				+ Model.SellOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Qty * x.Price)
				- (Model.BuysOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Commission ?? 0m) + Model.SellOps[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Commission ?? 0m))
				- (a.Type == AccountType.VBr && cur == Currency.Usd ? 101 : 0) // out const
				+ Model.Divs[new CacheViewModel.Item(cur, a.BitCode)].Sum(x => x.Summa)
			;
        }

        @($"{total:N2}")
    </td>
</tr>
