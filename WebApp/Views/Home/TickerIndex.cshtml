@model Invest.WebApp.Models.OperationViewModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Home";
}
<script>
    $(document).ready(function () {
        //console.log("Объектная модель готова к использованию!");
        const h = document.documentElement.clientHeight - absoluteTop(document.getElementById("divTickerList")) - 10;
        $("#divTickerList").height(h);
        $("#divGrid").height(h);

        var checkTickersZero = document.querySelector("#checkTickersZero");
        checkTickersZero.checked = LocalSetting.value(LocalSettingEnum.ShowTickerFilterQtyZero) === "true";

        checkTickersZero.onchange = () => {
            LocalSetting.saveToStorage(LocalSettingEnum.ShowTickerFilterQtyZero, checkTickersZero.checked);
            console.log("c:", LocalSetting.value(LocalSettingEnum.ShowTickerFilterQtyZero));
            refreshTickers();
        }

        //console.log("c:", LocalSetting.value(LocalSettingEnum.ShowTickerFilterQtyZero));
    });
</script>

<div id="divMain" style="overflow-y: scroll; padding:0; padding-top: 0; vertical-align: top;">
    <table class="tbl-1">
    <tr>
        <td class="td-1">
            <div class="div-ticker">
                @{ await Html.RenderPartialAsync("TickerList"); }
            </div>
        </td>
        <td class="td-2">
            <div id="divGrid" style="margin:0; padding:0; padding-right: 8px; overflow-y: scroll;">
                @{
                    if (Model.Stock != null) { await Html.RenderPartialAsync("TickerDetails"); }
                }
            </div>
        </td>
    </tr>
    </table>
</div>